# Delete Account Integration

## Endpoint
DELETE /api/users/me

## Headers
Authorization: Bearer YOUR_JWT_TOKEN
Content-Type: application/json

## Request Body
{
  "password": "user_current_password"
}

## Password Entity Requirements
Field Name: password
Type: String
Required: Yes
Minimum Length: 8 characters
Description: User's current password for account deletion confirmation

## Success Response (200)
{
  "message": "Account deleted successfully",
  "note": "Your account has been removed from the system. All data you created remains intact for data integrity purposes."
}

## Error Response (400)
{
  "message": "Invalid password. Account deletion cancelled."
}

## How it works
1. User must be logged in (valid JWT token required)
2. User enters their current password for confirmation
3. Backend verifies the password against stored hash using bcrypt
4. If password is correct, user account is deleted from users table
5. All user-created data (projects, entries, etc.) remains intact
6. User loses access to dashboard but data is preserved for integrity

## Security
Password confirmation prevents accidental deletion and unauthorized access even with stolen tokens.

## Example Request
curl -X DELETE http://localhost:3000/api/users/me \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer YOUR_JWT_TOKEN_HERE" \
  -d '{
    "password": "MyCurrentPass123!"
  }'

# Password Reset Integration

## Step 1: Request Password Reset
POST /auth/request-reset
Body: { "email": "user@example.com" }

**Response for Registered Email:**
- Success: OTP sent to email
- Error: "Email is not registered in our system" (404)

## Step 2: Reset Password with OTP
POST /auth/reset-password-otp
Body: { "email": "user@example.com", "otp": "123456", "newPassword": "NewPass123!" }

**Email Verification:**
- Backend checks if email exists in database
- If email not registered: "User not found" (404)
- If email registered but OTP invalid: "Invalid or expired OTP" (400)
- If email registered and OTP valid: Password reset successfully (200)

**Security Implementation:**
- Email verification happens in both steps
- Unregistered emails get clear error messages
- Only registered users can complete password reset
